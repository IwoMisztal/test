//////////////////////////////////////////
// Import zapisów kasowych/bankowych z programu WODA

var rApp		
var rLogin		
var rSesja		
var liniaA, liniaN, RejestrVAT, Kategoria, i, DodatkowaObj,Rozl1, Rozl2, ss, rvatss,rdodss, id1,id2
var kwota_7002, kwota_7003, dod_7002, dod_7003, Brutto, KwotaDodatkowa, KwotaZalKP, KwotaZalBP
liniaA = ""
liniaN = ""
i = 1
kwota_7002 = 0
kwota_7003 = 0
dod_7002 = 0
dod_7003 = 0
Brutto = 0
KwotaDodatkowa = 0
KwotaZalKP = 0
KwotaZalBP = 0

//Parametry logowania
var User = 'Admin'
var Password = 'OBqT5p0g'
var DataBase = 'ZWK'

try {
	rApp		= new ActiveXObject("CDNBASE.Application") 
	rApp.LockApp(1)
	rLogin	= rApp.Login(User,Password, DataBase)
	//rSesja = rLogin.CreateSession()
	}
catch (e) {
	WScript.Echo("B³¹d inicjalizacji programu " + e.description)
	}

if (!rLogin) {
	WScript.Echo("Nie zalogowano siê poprawnie do programu")
	}
else {
	try { 
	var fileObject = new ActiveXObject("Scripting.FileSystemObject")
	var fraport = fileObject.CreateTextFile('RaportZapisy.txt')
	var file, IDZapisKP, IDZapisBP, IDRejestr, RaportKPID, RaportBPID
	var ZapisTyp, NumerZapisuNazwa, NumerFaktury, KwotaZapisu
	
	//Brutto = parseFloat(liniaN.substring(85,98).replace(RegExp("^\\s+","gm"),'').replace(',','.'))
	//KwotaDodatkowa = parseFloat(liniaN.substring(351,366).replace(RegExp("^\\s+","gm"),'').replace(',','.'))
	
	//Dodaj Raport KP
	file = fileObject.OpenTextFile('c:\\woda\\woda.txt')
	RaportKPID = DodajRaportKP(file)
	file.Close()
	//Dodaj zapisy na KP
	ImportZapisow("")
	
	//Dodaj raport dla PKO BP
	file = fileObject.OpenTextFile('c:\\woda\\woda.txt')
	RaportBPID = DodajRaportBP(file, "PKO BP")
	file.Close()
	//Dodaj zapisy dla PKO BP
	ImportZapisow("PKO BP")
	//....................
	
	//Dodaj raport dla BOŒ1
	file = fileObject.OpenTextFile('c:\\woda\\woda.txt')
	RaportBPID = DodajRaportBP(file, "BOŒ1")
	file.Close()
	//Dodaj zapisy dla BOŒ1
	ImportZapisow("BOŒ1")
	//....................
	
	file = fileObject.OpenTextFile('c:\\woda\\woda.txt',8)
	file.WriteLine()
	file.WriteLine("-----------")
	file.Close()
	
	
	
	
	}
	catch (e) { WScript.Echo("B³¹d odczytywania pliku " + e.description) }
	rApp.UnLockApp()
	fraport.Close()
	WScript.Echo("KONIEC")
	}

function ImportZapisow(bankAkronim)
{
	fraport.WriteLine("Import zapisów...")
	file = fileObject.OpenTextFile('C:\\woda\\woda.txt')
	liniaN = file.ReadLine()
	var SesjaSQL = newSession()
		
	while(!file.AtEndOfStream) {
      liniaA = liniaN
      liniaN = file.ReadLine()
      ZapisTyp=liniaA.substring(2,4)
      
      if( (ZapisTyp == "KP" && bankAkronim == "") || (ZapisTyp == "BP" && bankAkronim == getAkronim(liniaA.substring(397,398)) ) ) {
        if(liniaA.substring(81,83) == "MA") {
          NumerZapisuNazwa=liniaA.substring(6,26).replace(RegExp("\\s+$","gm"),'')
          NumerFaktury=liniaA.substring(313,352).replace(RegExp("^\\s+","gm"),'').replace(RegExp("\\s+$","gm"),'')
          KwotaZapisu=liniaA.substring(85,98).replace(RegExp("^\\s+","gm"),'').replace(',','.')
          var OpisiNumer=liniaA.substring(294,351).replace(RegExp("\\s+$","gm"),'')
          //fraport.WriteLine("Dodawanie " + ZapisTyp + " numer zapisu: " + NumerZapisuNazwa + " - numer faktury: " + NumerFaktury + " - kwota: " + KwotaZapisu)
           
          var NumerZapisu = SesjaSQL.Connection.Execute("SELECT BZp_NumerObcy FROM CDN.BnkZapisy WHERE BZp_NumerObcy = '" + NumerZapisuNazwa + "' AND BZp_Opis LIKE '%" + OpisiNumer + "'")
      
          if(NumerZapisu.RecordCount == 0) {
            var MSesja = newSession()
              // Pobranie ID faktury (Rejestru VAT). Je¿eli nie istnieje to i tak dodaæ zapis KP.
              try {
                
                IDRejestr = MSesja.CreateObject("CDN.ZdarzeniaKB").Item("BZd_NumerPelny = '" + NumerFaktury + "' AND BZd_DokumentTyp = 2").DokumentID			
              }
              catch(e) { 
                fraport.WriteLine("Nie uda³o siê pobraæ danych z faktury " + NumerFaktury + ". Powód: " + e.description)
                IDRejestr = -1
              }
              // Dodanie nowego KB/BP
              IDZapisKP = DodajZapis(liniaA)
              //aktualizacja statusu Rozliczone 
              if (IDZapisKP != -1) {
                  if (liniaA.substring(294,313) == "Zap³ata za odsetki:") {
                  var NumerZapisu = SesjaSQL.Connection.Execute("UPDATE CDN.BnkZapisy SET BZp_Rozliczono=0, BZp_Rozliczono2=0 WHERE BZp_BZpID= '" + IDZapisKP + "'")
                  fraport.WriteLine("Zapis nie podlega rozliczeniu.")
                  } else {
                    // Rozliczenie KP z faktur¹.
                    if (IDRejestr != -1 && IDZapisKP != -1) {
                      Rozlicz(IDZapisKP,IDRejestr)
                    } else {
                      fraport.WriteLine("Rozliczenie niemo¿liwe.")
                    }
                  }
              } 
              
          } else {
            fraport.WriteLine("Zapis " + ZapisTyp + " o numerze " + NumerZapisuNazwa + " dla faktury " + NumerFaktury + " ju¿ istnieje.")
          }
        }
      }
		}
		 fraport.WriteLine("Import dla " + ZapisTyp + " " + bankAkronim + " zakoñczony.")
}
	
//-----------------------------------------
function DodajZapis(line) {
try {
  var RachunekAkr, ZapisRaportID,tmpTyp
  switch(line.substring(2,4)) {
    case "KP":
      RachunekAkr="KASA"
      ZapisRaportID=RaportKPID
      tmpTyp="KP"
      break
    case "BP":
      //RachunekAkr="PKO BP"
	  RachunekAkr = getAkronim(line.substring(397,398))
      ZapisRaportID=RaportBPID
      tmpTyp="BP"
      break
    default: 
      fraport.WriteLine("Brak okreœlenia KP/BP w pliku.")
      return -1
  }
  var Sesja = newSession()
  
  Zapis = Sesja.CreateObject("CDN.ZapisyKB").AddNew()
  
  var tmpKwota = line.substring(85,98).replace(RegExp("^\\s+","gm"),'')
  
  var Numerator = Zapis.Numerator
  var DokDef
  if(RachunekAkr == "KASA")
  {
	if(tmpKwota.search("-") != -1)
	{
		DokDef = Sesja.CreateObject("CDN.DefinicjeDokumentow").Item("DDf_Symbol='KW'")
	}
	else
	{
		DokDef = Sesja.CreateObject("CDN.DefinicjeDokumentow").Item("DDf_Symbol='KP'")
	}
  }
  else
  {
	if(tmpKwota.search("-") != -1)
	{
		DokDef = Sesja.CreateObject("CDN.DefinicjeDokumentow").Item("DDf_Symbol='BW'")
	}
	else
	{
		DokDef = Sesja.CreateObject("CDN.DefinicjeDokumentow").Item("DDf_Symbol='BP'")
	}
  }
		Numerator.DefinicjaDokumentu = DokDef
  var Rachunek = Sesja.CreateObject("CDN.Rachunki").Item("Bra_Akronim = '" + RachunekAkr + "'") 
		Zapis.Rachunek = Rachunek
		Numerator.Rejestr = Rachunek.Symbol
  var Raport = Sesja.CreateObject("CDN.RaportyKB").Item("BRp_BRpID = " + ZapisRaportID) 
		Zapis.RaportKB = Raport
		Zapis.DataDok = line.substring(27,37)
		var tmpKwota = line.substring(85,98).replace(RegExp("^\\s+","gm"),'')
		if(tmpKwota.search("-") != -1)
		{
			Zapis.Kwota = tmpKwota.replace("-","")	
			Zapis.Kierunek =  -1
		}
		else
		{
			Zapis.Kwota = tmpKwota;
			Zapis.Kierunek = 1
		}
		Zapis.NumerObcy = line.substring(6,26).replace(RegExp("\\s+$","gm"),'')
		Zapis.Opis = line.substring(294,351).replace(RegExp("\\s+$","gm"),'')
  var Kontrahent = Sesja.CreateObject("CDN.Kontrahenci").Item("Knt_KOD ='" + line.substring(74,80).replace(RegExp("^\\s+","gm"),'') + "'" ) 
  Zapis.Podmiot = Kontrahent
  
  Sesja.Save()
  fraport.WriteLine("Zapis " + tmpTyp + " " + line.substring(6,26).replace(RegExp("\\s+$","gm"),'') + " dodany. Dokument: " + line.substring(313,352).replace(RegExp("^\\s+","gm"),'').replace(RegExp("\\s+$","gm"),'') + ". Kwota: " + (Math.round(Zapis.Kwota*100)/100))
  return Zapis.ID
  	} catch (e) { 
      fraport.WriteLine("B³¹d dodawania zapisu: " + e.description)	
      return -1
    }

}

function Rozlicz(Dok1,Dok2) {
	try {
		var rozSesja = newSession()
		var rRozliczenie = rozSesja.CreateObject("CDN.RozliczeniaKB").AddNew()
		var rZapis     = rozSesja.CreateObject("CDN.ZapisyKB").Item("BZp_BZpID=" + Dok1)
		var rZdarzenie = rozSesja.CreateObject("CDN.ZdarzeniaKB").Item("BZd_DokumentID=" + Dok2 + " AND BZd_DokumentTyp  = 2")
		//var rZdarzenie1 = rozSesja.CreateObject("CDN.ZdarzeniaKB").Item("BZd_DokumentID=" + Dok1)
		//var rZdarzenie2 = rozSesja.CreateObject("CDN.ZdarzeniaKB").Item("BZd_DokumentID=" + Dok2 + " AND BZd_DokumentTyp  = 12")
		rRozliczenie.UstawDokumentyKB(rZapis,rZdarzenie,1)
		rozSesja.Save()
		fraport.WriteLine("Rozliczenie - OK.")
		closeSession(rozSesja)
	} catch(e) { 
		fraport.WriteLine("Rozliczenie - b³¹d: " + e.description)
		}
}


//Dodaje nowy raport KP do Optimy. Sprawdza najpierw czy w pliku WODA.txt sa jakies wpisy typu KP analizuj¹c drug¹ kolumnê pliku
//Sprawdza te¿, czy taki raport jest ju¿ w Optimie
function DodajRaportKP(fileTmp) {
	try {
	  fraport.WriteLine("Dodawanie raportu KP...")
		var linia,KPc
		KPc = 1
		
		//Petla sprawdza czy sa jakies zapisy typu KP i ustawia KPc na 2. Ustawia te¿ zmienne DataOdKp i DataDoKp analizauj¹c daty dokumentów
		//Data od jest dat¹ najwczesniejszego dokuemntu
		//Data do jest data najpozniejszego dokumentu
		while(!fileTmp.AtEndOfStream) {
			linia = fileTmp.Readline()
				if(linia.substring(2,4) == "KP") {
					if (KPc == 1) {
						DataODKP = linia.substring(27,37)
						DataDOKP = DataODKP
						KPc = 2
					}
					if(linia.substring(27,37) > DataDOKP) {
						DataDOKP = linia.substring(27,37)
					}
					if(linia.substring(27,37) < DataODKP) {
						DataODKP = linia.substring(27,37)
					}
				}
		}
		
		var SesjaKP = newSession()
		var RapKP = SesjaKP.Connection.Execute("SELECT BRp_BRpID,BRp_NumerPelny FROM CDN.BnkRaporty JOIN CDN.BnkRachunki ON BRp_BRaID = BRa_BRaID WHERE SUBSTRING(CONVERT(varchar,BRp_DataDok,120),0,11) <= '" + DataODKP + "' AND SUBSTRING(CONVERT(varchar,BRp_DataZam,120),0,11) >= '" + DataODKP + "' AND Bra_Akronim = 'KASA'")
		
		if(RapKP.RecordCount == 0) {
			var rRaportKP = SesjaKP.CreateObject("CDN.RaportyKB").AddNew()
			var rRejestrKP = SesjaKP.CreateObject("CDN.Rachunki").Item("BRa_Akronim = 'KASA'")
			rRaportKP.Rachunek = rRejestrKP

			rRaportKP.DataOtw=DataODKP
			rRaportKP.DataZam=DataDOKP
			SesjaKP.Save()
			fraport.WriteLine("Dodano raport KP: " + SesjaKP.Connection.Execute("SELECT Brp_NumerPelny FROM CDN.BnkRaporty WHERE BRp_BRpID=" + rRaportKP.ID).Fields.Item("BRp_NumerPelny").Value)
			return rRaportKP.ID
		} else if(RapKP.RecordCount == 1) {
      fraport.WriteLine("Istnieje raport KP do którego mo¿na dodawaæ: " + RapKP.Fields.Item("BRp_NumerPelny").Value)
			return RapKP.Fields.Item("BRp_BRpID").Value
		} else {
			WScript.Echo("Istniej¹ dwa lub wiêcej pokrywaj¹ce siê raporty KASA.")
			return -1
		}
	} catch(e) { 
			//WScript.Echo("Podczas dodawania raportu KB rejestru KASA wyst¹pi³ b³¹d: " + e.description)
			fraport.WriteLine("Nie uda³o siê pobraæ informacji o raporcie: "  + e.description)
			return -1
	}
}

//-----------------------------------------

function DodajRaportBP(fileTmp, bankAkronim) {
	try {
    fraport.WriteLine("Dodawanie raportu BP...")
		var linia,BPc 
		BPc = 1
		while(!fileTmp.AtEndOfStream) {
			linia = fileTmp.Readline()
				if(linia.substring(2,4) == "BP" && getAkronim(linia.substring(397,398)) == bankAkronim) {
					if (BPc == 1) {
						DataODBP = linia.substring(27,37)
						DataDOBP = DataODBP
						BPc = 2
					}
					if(linia.substring(27,37) > DataDOBP) {
						DataDOBP = linia.substring(27,37)
					}
					if(linia.substring(27,37) < DataODBP) {
						DataODBP = linia.substring(27,37)
					}
																			
				}
		}
		
		var SesjaBP = newSession()		
		var RapBP = SesjaBP.Connection.Execute("SELECT BRp_BRpID,BRp_NumerPelny FROM CDN.BnkRaporty JOIN CDN.BnkRachunki ON BRp_BRaID = BRa_BRaID WHERE SUBSTRING(CONVERT(varchar,BRp_DataDok,120),0,11) <= '" + DataODBP + "' AND SUBSTRING(CONVERT(varchar,BRp_DataZam,120),0,11) >= '" + DataDOBP + "' AND Bra_Akronim = '" + bankAkronim + "'")
		if(RapBP.RecordCount == 0) {
			var rRaportBP = SesjaBP.CreateObject("CDN.RaportyKB").AddNew()
			var rRejestrBP = SesjaBP.CreateObject("CDN.Rachunki").Item("BRa_Akronim = '" + bankAkronim + "'")
			rRaportBP.Rachunek = rRejestrBP

			rRaportBP.DataOtw=DataODBP
			rRaportBP.DataZam=DataDOBP
			SesjaBP.Save()
			fraport.WriteLine("Dodano raport BP dla " + bankAkronim + " : " + SesjaBP.Connection.Execute("SELECT Brp_NumerPelny FROM CDN.BnkRaporty WHERE BRp_BRpID=" + rRaportBP.ID).Fields.Item("BRp_NumerPelny").Value)
			return rRaportBP.ID
		} else if(RapBP.RecordCount == 1) {
      fraport.WriteLine("Istnieje raport BP do którego mo¿na dodawaæ: " + RapBP.Fields.Item("BRp_NumerPelny").Value)
			return RapBP.Fields.Item("BRp_BRpID").Value
		} else {
			WScript.Echo("Istniej¹ dwa lub wiêcej pokrywaj¹ce siê raporty BP.")
			return -1
		}
	} catch(e) { 
			//WScript.Echo("Podczas dodawania raportu KB rejestru PKO BP wyst¹pi³ b³¹d: " + e.description)
			fraport.WriteLine("Nie uda³o siê pobraæ informacji o raporcie: "  + e.description)
			return -1
	}
}

//-----------------------------------------
function getAkronim(akronimId) {
	switch(akronimId) {
		// case "0":
		  // return "BANK1"

		// case "1":
		//  return "BANK1"

		//case "4":
		  //return ""

		//case "5":
		  //return ""

		case "6":
		  return "BOŒ1"
				  
		case "7":
		  return "PKO BP"
		  
		default: 
		  //fraport.WriteLine("Nieznany Id banku.")
		  return "PKO BP"
    }
}
//-----------------------------------------
function newSession() {
	var _ss = rLogin.CreateSession()
	if (_ss.connection.State==0)  _ss.connection.Open()
	//rSesja.login.PushBackConnection(_ss.connection, false)
	_ss.connection.Execute("SET ANSI_NULLS ON; SET ANSI_PADDING ON; SET ANSI_WARNINGS ON; "+
		"SET ARITHABORT ON; SET CONCAT_NULL_YIELDS_NULL ON; SET QUOTED_IDENTIFIER ON; " +
		"SET NUMERIC_ROUNDABORT OFF")
	return _ss
}
//-----------------------------------------
function closeSession(_ss) {
	if (_ss.connection.State==1) _ss.connection.Close()
}